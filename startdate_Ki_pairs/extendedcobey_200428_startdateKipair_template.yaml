experiment_setup_parameters:
  'number_of_samples': 3
  'number_of_runs': 3
  'duration': 365
  'monitoring_samples': 365 # needs to be smaller than duration
  'random_seed': 18
  'initialAs': 10
fixed_parameters_region_specific:
  populations:
    'IL': 12830632
    'NMH_catchment': 315000
    'Chicago': 2700000
    'EMS_1': 736370
    'EMS_2': 1124941
    'EMS_3': 619366
    'EMS_4': 698886
    'EMS_5': 417674
    'EMS_6': 788985
    'EMS_7': 1814891
    'EMS_8': 1673408
    'EMS_9': 1970275
    'EMS_10': 1052839
    'EMS_11': 2716921
  startdate:
    'NMH_catchment': 2020-02-28
    'Chicago': 2020-02-20
    'IL': 2020-02-13  # used for spatial model
    # To specify a range of dates instead of a single date:
    # 'EMS_1': [2020-02-26, 2020-02-28]
    # This would mean using all dates between 2020-02-26 and 2020-02-28, inclusive.
[STARTDATES]
fixed_parameters_global:
sampled_parameters:
  'time_to_infectious':
    np.random: uniform
    function_kwargs: {'low': 3.4, 'high':4.5}
  'time_to_symptoms':
    np.random: uniform
    function_kwargs: {'low': 2.4, 'high': 3.5}
  'time_to_detection':
    np.random: uniform
    function_kwargs: {'low':2.9, 'high':2.9}
  'time_to_hospitalization':
    np.random: uniform
    function_kwargs: {'low':3, 'high':6}
  'time_to_critical':
    np.random: uniform
    function_kwargs: {'low':4, 'high':6}
  'time_to_death':
    np.random: uniform
    function_kwargs: {'low':4, 'high':6}
  'recovery_time_asymp':
    np.random: uniform
    function_kwargs: {'low':7, 'high':10}
  'recovery_time_mild':
    np.random: uniform
    function_kwargs: {'low':7, 'high':10}
  'recovery_time_hosp':
    np.random: uniform
    function_kwargs: {'low':4, 'high':6}
  'recovery_time_crit':
    np.random: uniform
    function_kwargs: {'low':8, 'high':10}
  'fraction_symptomatic':
    np.random: uniform
    function_kwargs: {'low':0.5, 'high':0.7}
  'fraction_severe':
    np.random: uniform
    function_kwargs: {'low':0.02, 'high':0.1}
  'fraction_critical':
    np.random: uniform
    function_kwargs: {'low':0.2, 'high':0.35}
  'cfr': 
    np.random: uniform
    function_kwargs: {'low':0.01, 'high':0.04}
  'reduced_inf_of_det_cases':
    np.random: uniform
    function_kwargs: {'low':0, 'high':0.3}
  'd_Sym':
    np.random: uniform
    function_kwargs: {'low':0.01, 'high':0.05}
  'd_Sys':
    np.random: uniform
    function_kwargs: {'low':0.00, 'high':0.025} 
  'd_As':
    np.random: uniform
    function_kwargs: {'low':0, 'high':0}
  'd_P':
    np.random: uniform
    function_kwargs: {'low':0, 'high':0}
intervention_parameters:
  ### TIME-VARYING PARAMETER - EFFECT SIZE
  ### Reduce Ki due to stay-at-home policy
  'social_multiplier_1':
    np.random: uniform
    function_kwargs: {'low':0.7, 'high':0.9}
  'social_multiplier_2':
    np.random: uniform
    function_kwargs: {'low':0.2, 'high':0.5}
  'social_multiplier_3':
    np.random: uniform
    function_kwargs: {'low':0.08, 'high':0.08}
  ### Reset Ki to defined proporions of it's initial value
  ### (only used if corresponding emodl is defined)    
  'backtonormal_multiplier':
    np.random: uniform
    function_kwargs: {'low':0.90, 'high':0.90}
  ### Gradual reopening (time-wise)
  'reopening_multiplier_1':
    np.random: uniform
    function_kwargs: {'low':0.3, 'high':0.3}
  'reopening_multiplier_2':
    np.random: uniform
    function_kwargs: {'low':0.5, 'high':0.5}
  'reopening_multiplier_3':
    np.random: uniform
    function_kwargs: {'low':0.7, 'high':0.7}
  'reopening_multiplier_4':
    np.random: uniform
    function_kwargs: {'low':0.90, 'high':0.90}
  ### Increased testing - increased detectioon of severe symptomatic infections
  ### (only used if corresponding emodl is defined)    
  'd_Sys_incr1':
    np.random: uniform
    function_kwargs: {'low':0.062, 'high':0.121}
  'd_Sys_incr2':
    np.random: uniform
    function_kwargs: {'low':0.286, 'high':0.457}
  'd_Sys_incr3':
    np.random: uniform
    function_kwargs: {'low':0.447, 'high':0.683}
  ### Contact tracing - increase detectioon of asymptomatic, presymptomatic and mild infections
  ### Note detection of asymptomatic and presymptomatic assumed to be the same
  ### (only used if corresponding emodl is defined)
  ## d_SQ proportion of susceptibles that get temporarily quarantined (disabled)
  ## d_SQ if used, it should be proportional to cases rather than fixed fraction
  'd_As_ct1':
    np.random: uniform
    function_kwargs: {'low':0.80, 'high':0.80}
  'd_Sym_ct1':
    np.random: uniform
    function_kwargs: {'low':0.80, 'high':0.80}
  'd_SQ':
    np.random: uniform
    function_kwargs: {'low':0.80, 'high':0.80}
  ## Use fixed dates or define detection time relative to  socialDistance_time3
time_parameters:
  ### TIME-VARYING PARAMETER  - DATES
  ### Reduce Ki due to stay-at-home policy
  'socialDistance_time1':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-03-12, 'startdate_col': 'startdate'}
  'socialDistance_time2':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-03-17, 'startdate_col': 'startdate'}
  'socialDistance_time3':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-03-21, 'startdate_col': 'startdate'}
  ### Reset Ki to defined proporions of it's initial value
  ### (only used if corresponding emodl is defined)
  'socialDistanceSTOP_time':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-06-01, 'startdate_col': 'startdate'}
  ### Gradual reopening (time-wise)
  'gradual_reopening_time1':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-06-01, 'startdate_col': 'startdate'}
  'gradual_reopening_time2':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-06-15, 'startdate_col': 'startdate'}
  'gradual_reopening_time3':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-07-01, 'startdate_col': 'startdate'}
  'gradual_reopening_time4':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-07-15, 'startdate_col': 'startdate'}
  ### Increased testing - increased detectioon of severe symptomatic infections
  ### (only used if corresponding emodl is defined)
  ### Use fixed dates or define detection time relative to  socialDistance_time3
  'detection_time_1':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-03-14, 'startdate_col': 'startdate'}
  'detection_time_2':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-03-21, 'startdate_col': 'startdate'}
  'detection_time_3':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-03-28, 'startdate_col': 'startdate'}
  ### Contact tracing - increase detectioon of asymptomatic, presymptomatic and mild infections
  ### Note detection of asymptomatic and presymptomatic assumed to be the same
  ### (only used if corresponding emodl is defined)
  'contact_tracing_start_1':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-05-15, 'startdate_col': 'startdate'}
  ## stop after simulation end to simulate indefinite contact tracing
  'contact_tracing_stop1':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2021-05-30, 'startdate_col': 'startdate'}
fitted_parameters:
  Kis:
[KIVALUES]