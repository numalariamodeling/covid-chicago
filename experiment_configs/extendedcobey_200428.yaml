experiment_setup_parameters:
  'number_of_samples': 600
  'number_of_runs': 1
  'duration': 504
  'monitoring_samples': 504 # needs to be less than or equal to duration
  'random_seed': 751
  'initialAs': 10
fixed_parameters_region_specific:
  populations:
    ### Not actively used
    'NMH_catchment': 327667
    'Chicago': 2456274
    ### Used for spatial model, or base model all IL
    'IL': 12671821
    ### Used for base and age model    
    'EMS_1': 660965
    'EMS_2': 1243906
    'EMS_3': 556776
    'EMS_4': 656946
    'EMS_5': 403659
    'EMS_6': 739098
    'EMS_7': 800605
    'EMS_8': 1455324
    'EMS_9': 1004309
    'EMS_10': 2693959
    'EMS_11': 2456274
  startdate:
    # To specify a range of dates instead of a single date:
    # 'EMS_1': [2020-02-26, 2020-02-28]
    # This would mean using all dates between 2020-02-26 and 2020-02-28, inclusive.  
    ### Not actively used
    'NMH_catchment': 2020-02-28
    'Chicago': 2020-02-20 
    ### Used for spatial model, or base model all IL
    'IL': 2020-02-13 
    ### Used for base and age model    
    'EMS_1': 2020-02-26       
    'EMS_2': 2020-02-25  
    'EMS_3': 2020-02-16     
    'EMS_4': 2020-02-20  
    'EMS_5': 2020-02-24     
    'EMS_6': 2020-02-29  
    'EMS_7': 2020-02-22           
    'EMS_8': 2020-02-25       
    'EMS_9': 2020-02-25        
    'EMS_10': 2020-02-18      
    'EMS_11': 2020-02-22       
fixed_parameters_global:
sampled_parameters:
  ### ---- INFECTION AND DISEASE PROGRESSION TIMES ---------- 
  'time_to_infectious':
    np.random: uniform
    function_kwargs: {'low': 3.4, 'high':4.5}
  'time_to_symptoms':
    np.random: uniform
    function_kwargs: {'low': 2.4, 'high': 3.5}
  'time_to_hospitalization':
    np.random: uniform
    function_kwargs: {'low':3, 'high':6}
  'time_to_critical':
    np.random: uniform
    function_kwargs: {'low':4, 'high':6}
  'time_to_death':
    np.random: uniform
    function_kwargs: {'low':4, 'high':6}
  ### ---- DETECTION TIMES  ----------------------- 
  ### Time to detection for all (not used,depending on model specification)
  'time_to_detection':
    np.random: uniform
    function_kwargs: {'low':2.0, 'high':2.0}
  ### Time to detection for As
  'time_to_detection_As':
    np.random: uniform
    function_kwargs: {'low':1.0, 'high':6.0}
  ### Time to detection for Sym
  'time_to_detection_Sym':
    np.random: uniform
    function_kwargs: {'low':7.0, 'high':7.0}
    #function_kwargs: {'low':2.0, 'high':5.0}
  ### Time to detection for Sys
  'time_to_detection_Sys':
    np.random: uniform
    function_kwargs: {'low':2.0, 'high':2.0}
  ### ---- RECOVERY TIMES  ----------------------- 
  'recovery_time_asymp':
    np.random: uniform
    function_kwargs: {'low':8.481, 'high':8.481}
  'recovery_time_mild':
    np.random: uniform
    function_kwargs: {'low':9, 'high':9}
  'recovery_time_hosp':
    np.random: uniform
    function_kwargs: {'low':4, 'high':6}
  'recovery_time_crit':
    np.random: uniform
    function_kwargs: {'low':8, 'high':10}
  ### ---- FRACTIONS  ----------------------- 
  'fraction_symptomatic':
    np.random: uniform
    function_kwargs: {'low':0.5, 'high':0.7}
  'fraction_severe':
    np.random: uniform
    function_kwargs: {'low':0.06, 'high':0.1}
  'fraction_critical':
    np.random: uniform
    function_kwargs: {'low':0.20, 'high':0.35}
  'cfr': 
    np.random: uniform
    function_kwargs: {'low':0.01, 'high':0.03}
  ### ---- INFECTIOUSNESS  ----------------------
  'reduced_inf_of_det_cases':
    np.random: uniform
    function_kwargs: {'low':0, 'high':0.3}
  'reduced_infectious_As':
    np.random: uniform
    function_kwargs: {'low':0.8, 'high':0.8}
  ### ----DETECTION RATES ----------------------
  ### In locale model, d_Sym is group specific
  'd_Sym':
    np.random: uniform
    function_kwargs: {'low':0.00, 'high':0.01}
  'd_Sys':
    np.random: uniform
    function_kwargs: {'low':0.00, 'high':0.0185} 
  'd_As':
    np.random: uniform
    function_kwargs: {'low':0, 'high':0}
  'd_P':
    np.random: uniform
    function_kwargs: {'low':0, 'high':0}  
  ###------------------------------------------------
  ### TIME_VARYING PARAMETERS  - EFFECT SIZE 
  ###------------------------------------------------
  ### Reduce Ki due to stay-at-home policy
  #'ki_multiplier_3a':
  #  np.random: uniform
  #  function_kwargs: {'low':0.7, 'high':0.9}
  #'ki_multiplier_3b':
  #  np.random: uniform
  #  function_kwargs: {'low':0.2, 'high':0.5}
  #'ki_multiplier_3c':
  #  np.random: uniform
  #  function_kwargs: {'low':0.08, 'high':0.08}        
  ### Increased testing - increased detectioon of severe symptomatic infections
  'd_Sys_incr1':
    np.random: uniform
    function_kwargs: {'low':0.029, 'high':0.090}
  'd_Sys_incr2':
    np.random: uniform
    function_kwargs: {'low':0.090, 'high':0.192}
  'd_Sys_incr3':
    np.random: uniform
    function_kwargs: {'low':0.192, 'high':0.330}
  'd_Sys_incr4':
    np.random: uniform
    function_kwargs: {'low':0.330, 'high':0.450}
  'd_Sys_incr5':
    np.random: uniform
    function_kwargs: {'low':0.450, 'high':0.600}
  'd_Sys_incr6':
    np.random: uniform
    function_kwargs: {'low':0.600, 'high':0.800}
  'd_Sys_incr7':
    np.random: uniform
    function_kwargs: {'low':0.800, 'high':1.000}
  ### Increase in d_Sym  
  ### In locale model, d_Sym  increase is group specific
  ### However when using this yaml for running single groups or non locale models it would be needed here
  'd_Sym_change1':
    np.random: uniform
    function_kwargs: {'low':0.01, 'high':0.08}
  'd_Sym_change2':
    np.random: uniform
    function_kwargs: {'low':0.05, 'high':0.10}
  'd_Sym_change3':
    np.random: uniform
    function_kwargs: {'low':0.10, 'high':0.20}
  'd_Sym_change4':
    np.random: uniform
    function_kwargs: {'low':0.10, 'high':0.30}
  'd_Sym_change5':
    np.random: uniform
    function_kwargs: {'low':0.10, 'high':0.40}
  ## fraction_critical
  'fraction_critical_incr1':
    np.random: uniform
    function_kwargs: {'low':0.13, 'high':0.23}
  'fraction_critical_incr2':
    np.random: uniform
    function_kwargs: {'low':0.07, 'high':0.12}
  'fraction_critical_incr3':
    np.random: uniform
    function_kwargs: {'low':0.05, 'high':0.09}
intervention_parameters:
  ###------------------------------------------------
  ### INTERVENTION PARAMETERS  - EFFECT SIZE
  ### (only used if corresponding emodl is defined)   
  ###------------------------------------------------  
  ### ---- IMMEDIATE REOPENING ----------------------
  ### Relative increase in transmission rate due to COVID-19 B variant  
  'bvariant_infectivity':
    np: linspace
    function_kwargs: {'start':1.5, 'stop':1.5}
  ### Fraction of the population infected with COVID-19 B variant  
  'bvariant_fracinfect':
    np: linspace
    function_kwargs: {'start':0.25, 'stop':0.25}
    #function_kwargs: {'start':0.5, 'stop':0.5}
    #function_kwargs: {'start':0.75, 'stop':0.75}
    #function_kwargs: {'start':0.25, 'stop':0.75, 'num' : 3}
  ### Relative increase in fraction severe due to COVID-19 B variant  
  'bvariant_severity':
    np: linspace
    function_kwargs: {'start':1.5, 'stop':1.5}
  ### Reset Ki to defined proporions of it's initial value  
  'backtonormal_multiplier':
    np.random: uniform
    # Add 'size' in function_kwargs to have multiple values instead of just one
    function_kwargs: {'low':0.10, 'high':0.10}
  ### ---- GRADUAL REOPENING ----------------------
  ### Reset Ki to defined proporions of it's initial value using multiple time-events
  ### Default in the yaml is a linear increase, scaling  reopening_multiplier_4 by 0.25, 0.5, 0.75 and 1
  #'reopening_multiplier_1':
  #  np.random: uniform
  #  function_kwargs: {'low':0.02, 'high':0.02}
  #'reopening_multiplier_2':
  #  np.random: uniform
  #  function_kwargs: {'low':0.04, 'high':0.04}
  #'reopening_multiplier_3':
  #  np.random: uniform
  #  function_kwargs: {'low':0.06, 'high':0.06}
  'reopening_multiplier_4':
    np: linspace
    function_kwargs: {'start':0, 'stop':0.20, 'num' : 1}
  ### ---- IMPROVED TESTING/ISOLATION TURNAROUND -----------
  'change_testDelay_As_1':
    np: linspace
    function_kwargs: {'start':2, 'stop':7, 'num' : 1}
  'change_testDelay_Sym_1':
    np: linspace
    function_kwargs: {'start':2, 'stop':7, 'num' : 1}
    #function_kwargs: {'start':2, 'stop':7, 'num' : 11}
  ### ---- CONTACT TRACING ----------------------
  ### increase detection rates of asymptomatic, presymptomatic and mild infections
  'd_AsP_ct1':
    np.random: uniform
    function_kwargs: {'low':0, 'high':0}
  ### Since d_Sym differs per group, this parameter defines relative increase rather than fraction detected!
  'd_Sym_ct1':
    np.random: uniform
    function_kwargs: {'low':0.170, 'high':0.170}
  'reduced_inf_of_det_cases_ct1':
    np.random: uniform
    function_kwargs: {'low':0, 'high':1}
  ### ---- TRIGGERED 'LOCKDOWN' ----------------------
  ### decreases transmission rate at a specific threshold (spatial model only)
  'capacity_multiplier':
    np.random: uniform
    function_kwargs: {'low':0.75, 'high':0.75}
  'trigger_delay_days':
    np.random: uniform
    function_kwargs: {'low':1, 'high':1}  
  ### ---- AGE MODEL SPECIFIC ----------------------
  ### Adjusts transmission among elderly during 2nd wave (age model only)
  'multiplier_elderly':
    np.random: uniform
    function_kwargs: {'low': 0.6, 'high':0.6}
time_parameters:
  ###------------------------------------------------
  ### TIME_VARYING PARAMETERS  - DATES
  ###------------------------------------------------
  ### Reduce Ki due to stay-at-home policy 
  'ki_multiplier_time_3a':
    custom_function: DateToTimestep
    # To use multiple dates instead of just one date, use an array of dates,
    # e.g., function_kwargs: {'dates': [2020-03-12, 2020-03-13]}
    function_kwargs: {'dates': 2020-03-12}
  'ki_multiplier_time_3b':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-03-17}
  'ki_multiplier_time_3c':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-03-21}
  'ki_multiplier_time_4':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-04-21}
  'ki_multiplier_time_5':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-05-21}
  'ki_multiplier_time_6':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-06-21}
  'ki_multiplier_time_7':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-07-25}
  'ki_multiplier_time_8':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-08-25}
  'ki_multiplier_time_9':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-09-17}
  'ki_multiplier_time_10':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-10-07}
  'ki_multiplier_time_11':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-11-11}
  'ki_multiplier_time_12':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-12-20}
  'ki_multiplier_time_13':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2021-01-20}
  ### ---- Increased detections ---- 
  ### Change in d_Sys
  'detection_time_1':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-03-07}
  'detection_time_2':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-03-14}
  'detection_time_3':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-03-21} 
  'detection_time_4':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-03-28} 
  'detection_time_5':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-04-04}
  'detection_time_6':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-04-18}
  'detection_time_7':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-06-01}
  ### Change in d_Sym
  'd_Sym_change_time_1':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-03-15}
  'd_Sym_change_time_2':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-04-15}
  'd_Sym_change_time_3':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-05-01}
  'd_Sym_change_time_4':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-06-01}
  'd_Sym_change_time_5':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-07-01}
  ### ---- Better case/ decreased mortality ---- 
  ###  Change in fraction_critical 
  'crit_time_1':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-04-01} 
  'crit_time_2':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-05-01} 
  'crit_time_3':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-06-01}
  ### Change in CFR
  'cfr_time_1':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-06-01}   
  'cfr_time_2':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-07-01}   
  ###------------------------------------------------
  ### INTERVENTION PARAMETERS  - DATES
  ### (only used with corresponding emodl)
  ###------------------------------------------------
  ### ---- IMMEDIATE REOPENING ---
  'socialDistance_rollback_time':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-11-14}
    #function_kwargs: {'dates': [2020-07-16, 2020-07-30, 2020-08-01, 2020-08-15, 2020-08-30, 2020-09-15]}
  ### Reset Ki to defined proporions of it's initial value  
  ### (only used if corresponding emodl is defined)    
  'socialDistanceSTOP_time':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-08-30}
  ### ---- GRADUAL REOPENING ---
  'gradual_reopening_time1':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-08-30}
  'gradual_reopening_time2':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-09-03}        
  'gradual_reopening_time3':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-09-08}    
  'gradual_reopening_time4':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-09-13}  
  ### ---- TRIGGERED 'LOCKDOWN' ---
  ### 'today' parameter used to constrain after when state events can be activated
  ### should be set to after reopening time events are completed
  'today' :
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2021-02-04}
  ### ---- IMPROVED TEST/ISOLATION TURNAROUND ---
  'change_testDelay_time1':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-08-30}
    #function_kwargs: {'dates': [2020-04-15, 2020-05-15, 2020-06-15, 2020-07-15, 2020-08-15, 2020-09-15]}
  ### ---- CONTACT TRACING ---
  ### Contact tracing - increase detectioon of asymptomatic, presymptomatic and mild infections
  ### Note detection of asymptomatic and presymptomatic assumed to be the same
  'contact_tracing_start_1':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-08-30}
  ### Stop after simulation end to simulate indefinite contact tracing
  'contact_tracing_stop1':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2022-05-30}
  ### Specific for age model
  'start_time_2ndWave':
    custom_function: DateToTimestep
    function_kwargs: {'dates': 2020-07-01}   
fitted_parameters:
  Kis:
    #### NOT ACTIVELY USED
    'NMH_catchment':
      np: linspace
      function_kwargs: {'start': 1.5e-6, 'stop': 2.0e-6, 'num': 1}
    'Chicago':
      np: linspace
      function_kwargs: {'start': 2.0e-7, 'stop': 3.0e-7, 'num': 1}
    #### LOCALE/SPATIAL MODEL - PLACEHOLDER (Ki's are in spatial yaml)
    'IL':
      np: linspace
      function_kwargs: {'start': 6.0e-8, 'stop': 9.0e-8, 'num': 1}
    #### BASE AND AGE MODEL - RUNNING SEPARATE REGIONS
    'EMS_1':
      np: linspace
      function_kwargs: {'start': 0.628, 'stop': 0.628, 'num': 1}
    'EMS_2':
      np: linspace
      function_kwargs: {'start': 0.654, 'stop': 0.654, 'num': 1}
    'EMS_3':
      np: linspace
      function_kwargs: {'start': 0.381, 'stop': 0.381, 'num': 1}
    'EMS_4':
      np: linspace
      function_kwargs: {'start': 0.571, 'stop': 0.571, 'num': 1}
    'EMS_5':
      np: linspace
      function_kwargs: {'start': 0.498, 'stop': 0.498, 'num': 1}
    'EMS_6':
      np: linspace
      function_kwargs: {'start': 0.501, 'stop': 0.501, 'num': 1}
    'EMS_7':
      np: linspace
      function_kwargs: {'start': 0.716, 'stop': 0.716, 'num': 1}
    'EMS_8':
      np: linspace
      function_kwargs: {'start': 0.897, 'stop': 0.897, 'num': 1}
    'EMS_9':
      np: linspace
      function_kwargs: {'start': 0.807, 'stop': 0.807, 'num': 1}
    'EMS_10':
      np: linspace
      function_kwargs: {'start': 0.754, 'stop': 0.754, 'num': 1}
    'EMS_11':
      np: linspace
      function_kwargs: {'start': 1.020, 'stop': 1.020, 'num': 1}
